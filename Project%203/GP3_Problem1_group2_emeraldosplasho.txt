/* Problem 1 */

create index moviebygenre on movie (genre);

select * from Movie;

select mname from Movie where did in (
select did from Director where dname = 'Black')));

select max(age) from performer where pname - 'Hanks' or pid in (
select pid from Movie where mname - 'That Derparted');

select mname from Movie where genre = 'Comedy' or 1 < (
select count(distinct pid) from Acted where Acted.mname = Movie.mname);

select dname from Director where 1 < (
select count(distinct pid) from Acted where mname in (
select mname from Movie where Movie.did = Director.did));

select distinct genre from Movie X where 2 = (
select count(distinct did) from Movie Y where Y.genre = X.genre);

select pname, pid from Performer where exists (
select X.mname from Movie X, Movie Y where X.mname != Y.mname
and X.genre = Y.genre and
X.mname in (
select mname from Acted where Acted.pid = Performer.pid)
and Y.mname in (
select mname from Acted where Acted.pid = Performer.pid));

select X.genre, avg(X.minutes) from Movie X, Movie Y
where X.genre = Y.genre
group by X.genre;

update Director set earnings = earnings * 0.9 where did in (
select did from Movie where mname = 'Up');

delete Movie where release_year between 1970 and 1980;

We chose the table 'movie' because it is the table that is accessed most among the list of queries. The attribute we chose to index was genre because the primary key, mname, is already indexed, and genre was the next-to-most occurring attribute in WHERE statements. The index is a secondary index because mname is already a primary index due to being a primary key. The reason we chose these queries to run was to see how searching for name and genre is affected by the indexing.